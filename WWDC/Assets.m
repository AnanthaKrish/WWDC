//
//  Assets.m
//  WWDC
//
//  Created by Genady Okrain on 10/1/14.
//  Copyright (c) 2014 Sugar So Studio. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "Assets.h"


@implementation Assets

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawLocation;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color46 = [UIColor colorWithRed: 0.341 green: 0.365 blue: 0.843 alpha: 1];
    UIColor* color48 = [UIColor colorWithRed: 0.341 green: 0.366 blue: 0.829 alpha: 1];
    UIColor* color49 = [UIColor colorWithRed: 0.341 green: 0.366 blue: 0.829 alpha: 0];

    //// Welcome
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 1, 1);
        CGContextScaleCTM(context, 0.5, 0.5);



        //// location
        {
            //// Shape-2 Drawing
            UIBezierPath* shape2Path = UIBezierPath.bezierPath;
            [shape2Path moveToPoint: CGPointMake(44, 20.22)];
            [shape2Path addCurveToPoint: CGPointMake(22, 62) controlPoint1: CGPointMake(44, 38.55) controlPoint2: CGPointMake(22, 62)];
            [shape2Path addCurveToPoint: CGPointMake(0, 20.22) controlPoint1: CGPointMake(22, 62) controlPoint2: CGPointMake(0, 38.99)];
            [shape2Path addCurveToPoint: CGPointMake(22, 0) controlPoint1: CGPointMake(0, 9.05) controlPoint2: CGPointMake(9.85, 0)];
            [shape2Path addCurveToPoint: CGPointMake(44, 20.22) controlPoint1: CGPointMake(34.15, 0) controlPoint2: CGPointMake(44, 9.05)];
            [shape2Path addLineToPoint: CGPointMake(44, 20.22)];
            [shape2Path closePath];
            shape2Path.miterLimit = 4;

            shape2Path.usesEvenOddFillRule = YES;

            [color49 setFill];
            [shape2Path fill];
            [color46 setStroke];
            shape2Path.lineWidth = 2;
            [shape2Path stroke];


            //// Oval-2 Drawing
            UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(13, 15, 18, 18)];
            [color48 setStroke];
            oval2Path.lineWidth = 2;
            [oval2Path stroke];
        }



        CGContextRestoreGState(context);
    }
}

+ (void)drawAddToCalendar;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color50 = [UIColor colorWithRed: 0.341 green: 0.366 blue: 0.829 alpha: 1];
    UIColor* color52 = [UIColor colorWithRed: 0.341 green: 0.365 blue: 0.843 alpha: 1];

    //// Welcome
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 1, 0);
        CGContextScaleCTM(context, 0.5, 0.5);



        //// Portrait
        {
            //// add-to-calendar
            {
                //// Rectangle-303 Drawing
                UIBezierPath* rectangle303Path = [UIBezierPath bezierPathWithRect: CGRectMake(48, 0, 4, 11)];
                [color50 setFill];
                [rectangle303Path fill];


                //// Rectangle-304 Drawing
                UIBezierPath* rectangle304Path = [UIBezierPath bezierPathWithRect: CGRectMake(15, 0, 4, 11)];
                [color50 setFill];
                [rectangle304Path fill];


                //// Rectangle-29 Drawing
                UIBezierPath* rectangle29Path = UIBezierPath.bezierPath;
                [rectangle29Path moveToPoint: CGPointMake(55.5, 59)];
                [rectangle29Path addLineToPoint: CGPointMake(7.01, 59)];
                [rectangle29Path addCurveToPoint: CGPointMake(0, 52.01) controlPoint1: CGPointMake(3.14, 59) controlPoint2: CGPointMake(0, 55.87)];
                [rectangle29Path addLineToPoint: CGPointMake(0, 10.99)];
                [rectangle29Path addCurveToPoint: CGPointMake(7.01, 4) controlPoint1: CGPointMake(0, 7.13) controlPoint2: CGPointMake(3.14, 4)];
                [rectangle29Path addLineToPoint: CGPointMake(60.99, 4)];
                [rectangle29Path addCurveToPoint: CGPointMake(68, 10.99) controlPoint1: CGPointMake(64.86, 4) controlPoint2: CGPointMake(68, 7.13)];
                [rectangle29Path addLineToPoint: CGPointMake(68, 36)];
                [rectangle29Path addLineToPoint: CGPointMake(65, 36)];
                [rectangle29Path addLineToPoint: CGPointMake(65, 11.01)];
                [rectangle29Path addCurveToPoint: CGPointMake(61, 7) controlPoint1: CGPointMake(65, 8.8) controlPoint2: CGPointMake(63.21, 7)];
                [rectangle29Path addLineToPoint: CGPointMake(7, 7)];
                [rectangle29Path addCurveToPoint: CGPointMake(3, 11.01) controlPoint1: CGPointMake(4.79, 7) controlPoint2: CGPointMake(3, 8.79)];
                [rectangle29Path addLineToPoint: CGPointMake(3, 51.99)];
                [rectangle29Path addCurveToPoint: CGPointMake(7, 56) controlPoint1: CGPointMake(3, 54.2) controlPoint2: CGPointMake(4.79, 56)];
                [rectangle29Path addLineToPoint: CGPointMake(50, 56)];
                [rectangle29Path addLineToPoint: CGPointMake(50, 59)];
                [rectangle29Path addLineToPoint: CGPointMake(55.5, 59)];
                [rectangle29Path closePath];
                rectangle29Path.miterLimit = 4;

                rectangle29Path.usesEvenOddFillRule = YES;

                [color52 setFill];
                [rectangle29Path fill];


                //// Rectangle-30 Drawing
                UIBezierPath* rectangle30Path = [UIBezierPath bezierPathWithRect: CGRectMake(65, 45, 3, 15)];
                [color52 setFill];
                [rectangle30Path fill];


                //// Rectangle-31 Drawing
                UIBezierPath* rectangle31Path = UIBezierPath.bezierPath;
                [rectangle31Path moveToPoint: CGPointMake(59, 53.92)];
                [rectangle31Path addLineToPoint: CGPointMake(74, 54.02)];
                [rectangle31Path addLineToPoint: CGPointMake(74, 51)];
                [rectangle31Path addLineToPoint: CGPointMake(59, 51)];
                [rectangle31Path addLineToPoint: CGPointMake(59, 53.92)];
                [rectangle31Path closePath];
                rectangle31Path.miterLimit = 4;

                rectangle31Path.usesEvenOddFillRule = YES;

                [color52 setFill];
                [rectangle31Path fill];
            }
        }



        CGContextRestoreGState(context);
    }
}

@end
